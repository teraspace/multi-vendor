FROM ruby:2.7.1

# By default image is built using RAILS_ENV=development.
# You may want to customize it:
#
#   --build-arg RAILS_ENV=production
#
# See https://docs.docker.com/engine/reference/commandline/build/#set-build-time-variables-build-arg
#
ARG RAILS_ENV=production
ARG RAILS_MASTER_KEY

ENV RAILS_ENV=${RAILS_ENV} \
    APP_HOME=/home/app 

ARG DATABASE
ARG DATABASE_HOST
ARG DATABASE_PASSWORD
ARG DATABASE_USERNAME

ARG ASSET_HOST

ENV DATABASE=${DATABASE}
ENV DATABASE_HOST=${DATABASE_HOST}
ENV DATABASE_PASSWORD=${DATABASE_PASSWORD}
ENV DATABASE_USERNAME=${DATABASE_USERNAME}

RUN curl -sL https://deb.nodesource.com/setup_14.x | bash - \
 && curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add - \
 && echo "deb https://dl.yarnpkg.com/debian/ stable main" | tee /etc/apt/sources.list.d/yarn.list 

RUN apt-get update \
 && apt-get install -y nodejs build-essential libpq-dev yarn \
 vim patch ruby-dev zlib1g-dev liblzma-dev libmariadb-dev libpq-dev libsqlite3-dev

RUN groupadd -r app --gid=1000 \
 && useradd -r -g app -d /home/app --uid=1000 app 

#VOLUME [ "/opt/vendor/bundle" , "/home/data"]

RUN mkdir -p /home/app /opt/vendor/bundle
RUN su -c 'chown -R app:app /opt/vendor/bundle /home/app'
COPY Gemfile $APP_HOME

USER app
RUN gem install bundler -v 2.1.4

## Install dependencies

RUN bundle config set path '/opt/vendor/bundle'
WORKDIR $APP_HOME
RUN bundle install 

# Copy the main application.  only assets
#COPY . $APP_HOME
COPY docker-entrypoint.sh $APP_HOME
# RUN chown -R app:app $APP_HOME  


# Initialize application configuration & assets.
#RUN bundle exec rake assets:precompile
RUN yarn install --check-files
#


#RUN bundle exec rake assets:precompile ASSET_HOST=${ASSET_HOST}  RAILS_ENV=production

# Expose port 8080 to the Docker host, so we can access it
# from the outside.
EXPOSE 8000


# The main command to run when the container starts. Also
# tell the Rails dev server to bind to all interfaces by
# default.
#CMD ["bundle", "exec", "rails", "server", "-b", "0.0.0.0", "-p", "8000"]


### cuando se haga el build
#RUN bundle install


#HEALTHCHECK --interval=5m --timeout=3s \
#  CMD curl -f http://localhost:8000/health_check || exit 1

# The main command to run when the container starts. Also
# tell the Rails dev server to bind to all interfaces by
# default.
#CMD ["bundle", "exec", "rails", "server", "-b", "0.0.0.0", "-p", "8000"]
### cuando se levante el docker
ENTRYPOINT ["docker-entrypoint.sh"]
